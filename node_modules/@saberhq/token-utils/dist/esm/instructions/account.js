import { __awaiter } from "tslib";
import { TransactionEnvelope } from "@saberhq/solana-contrib";
import { Token as SPLToken, TOKEN_PROGRAM_ID } from "@solana/spl-token";
import { Keypair, SystemProgram } from "@solana/web3.js";
import { TokenAccountLayout } from "../layout";
export const createTokenAccount = ({ provider, mint, owner = provider.wallet.publicKey, payer = provider.wallet.publicKey, accountSigner = Keypair.generate(), }) => __awaiter(void 0, void 0, void 0, function* () {
    // Allocate memory for the account
    const balanceNeeded = yield SPLToken.getMinBalanceRentForExemptAccount(provider.connection);
    const tokenAccount = accountSigner.publicKey;
    return {
        key: tokenAccount,
        tx: new TransactionEnvelope(provider, [
            SystemProgram.createAccount({
                fromPubkey: payer,
                newAccountPubkey: accountSigner.publicKey,
                lamports: balanceNeeded,
                space: TokenAccountLayout.span,
                programId: TOKEN_PROGRAM_ID,
            }),
            SPLToken.createInitAccountInstruction(TOKEN_PROGRAM_ID, mint, tokenAccount, owner),
        ], [accountSigner]),
    };
});
//# sourceMappingURL=account.js.map