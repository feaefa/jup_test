import { __awaiter } from "tslib";
import { PublicKey } from "@saberhq/solana-contrib";
import { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, } from "@solana/spl-token";
/**
 * Gets an associated token account address.
 */
export const getATAAddress = ({ mint, owner, }) => __awaiter(void 0, void 0, void 0, function* () {
    const [address] = yield PublicKey.findProgramAddress([owner.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()], ASSOCIATED_TOKEN_PROGRAM_ID);
    return address;
});
/**
 * Gets multiple associated token account addresses.
 */
export const getATAAddresses = ({ mints, owner, }) => __awaiter(void 0, void 0, void 0, function* () {
    const result = yield Promise.all(Object.entries(mints).map((args) => __awaiter(void 0, void 0, void 0, function* () {
        const [name, mint] = args;
        const result = yield getATAAddress({
            mint,
            owner: owner,
        });
        return {
            address: result,
            name,
            mint,
        };
    })));
    const deduped = result.reduce((acc, { address, name, mint }) => {
        return {
            accounts: Object.assign(Object.assign({}, acc.accounts), { [name]: { address, mint } }),
        };
    }, { accounts: {} });
    return {
        accounts: deduped.accounts,
    };
});
//# sourceMappingURL=ata.js.map