/// <reference types="node" />
import { u64 } from '@solana/spl-token';
import { AccountInfo, PublicKey, TransactionInstruction } from '@solana/web3.js';
import { AccountInfoMap, Amm, Quote, QuoteParams, SwapParams } from '../amm';
declare type SerumMarketKeys = {
    serumBids: PublicKey;
    serumAsks: PublicKey;
    serumEventQueue: PublicKey;
    serumCoinVaultAccount: PublicKey;
    serumPcVaultAccount: PublicKey;
    serumVaultSigner: PublicKey;
};
export declare class RaydiumAmm implements Amm {
    ammId: PublicKey;
    ammAccountInfo: AccountInfo<Buffer>;
    label: "Raydium";
    coinMint: PublicKey;
    pcMint: PublicKey;
    status: number;
    serumProgramId: PublicKey;
    serumMarket: PublicKey;
    ammOpenOrders: PublicKey;
    ammTargetOrders: PublicKey;
    poolCoinTokenAccount: PublicKey;
    poolPcTokenAccount: PublicKey;
    serumMarketKeys: SerumMarketKeys | undefined;
    coinReserve: u64 | undefined;
    pcReserve: u64 | undefined;
    swapFeeNumerator: u64;
    swapFeeDenominator: u64;
    constructor(ammId: PublicKey, ammAccountInfo: AccountInfo<Buffer>);
    get id(): string;
    getAccountsForUpdate(): PublicKey[];
    update(accountInfoMap: AccountInfoMap): void;
    private static tokenAmountAccessor;
    getQuote({ sourceMint, amount }: QuoteParams): Quote;
    createSwapInstructions({ sourceTokenAccount, destinationTokenAccount, userTransferAuthority, amount, minimumOutAmount, platformFee, }: SwapParams): TransactionInstruction[];
    get reserveTokenMints(): PublicKey[];
}
export {};
